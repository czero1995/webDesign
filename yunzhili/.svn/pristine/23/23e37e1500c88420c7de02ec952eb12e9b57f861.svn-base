{extend name="layout/base"}

{block name="title"}
<title xmlns:v-bind="http://www.w3.org/1999/xhtml" xmlns:v-bind="http://www.w3.org/1999/xhtml">云之力</title>
{/block}

{block name="style"}
<style type="text/css">
    .infinite-scroll-preloader {
        margin-top: -20px;
        margin-bottom: 10px;
        text-align: center;
    }

    .infinite-scroll-preloader .preloader {
        width: 34px;
        height: 34px;
    }
</style>
{/block}

{block name="content"}
<!-- Page, data-page contains page name-->
<div class="page lesson-page" id="app lesson-page">
    <!-- Scrollable page content-->
    <div class="page-content infinite-scroll">
        <!--轮播-->
        <div class="swiper-container swiper-coach">
            <div class="swiper-wrapper">
                <div class="swiper-slide" v-for="banner in banners">
                    <img :src="banner.post"/></div>
            </div>
            <div class="swiper-pagination"></div>
        </div>
        <!--选择栏-->
        <div class="lesson-tabbar">
            <div class="tabbar-item" @click="onSelect('lessonRecommend')">
                <img src="__STATIC__/wx/img/btn_recommend_sel@2x.png" class="item-recommend-img"
                     v-bind:class="{ active: selected === 'lessonRecommend'}"/>
                <div class="tabbar-text tabbartext-select tabbartext-recommend">推荐</div>
            </div>
            <div class="tabbar-item" @click="onSelect('lessonHot')">
                <img src="__STATIC__/wx/img/btn_Popularity_nor@2x.png" class="item-hot-img"
                     v-bind:class="{ active: selected === 'lessonHot'}"/>
                <div class="tabbar-text tabbartext-hot">人气</div>
            </div>
            <div class="tabbar-item" @click="onSelect('lessonFilter')">
                <img src="__STATIC__/wx/img/btn_filter_nor@2x.png" class="item-filter-img"
                     v-bind:class="{ active: selected === 'lessonFilter'}"/>
                <div class="tabbar-text tabbartext-filter">筛选</div>
            </div>
        </div>
        <!--课程推荐-->
        <div class="lesson-recommend" v-show="selected === 'lessonRecommend'">
            <div class="recommend-item" v-for="courseList in courseLists">
                <a :href="courseList.url" class="external">
                    <div class="lesson-box clearfloat">
                        <div class="lesson-text">
                            <div class="title-name">{{ courseList.title }}</div>
                            <div class="lesson-title">{{ courseList.sub_title }}</div>
                            <div class="lesson-content"></div>
                            <div class="lesson-price">¥{{ courseList.price }}</div>
                        </div>
                        <img :src="courseList.post" class="lesson-img"/>
                    </div>
                    <div class="lesson-label">
                        <div class="label-item">{{courseList.tags}}</div>
                    </div>
                </a>
            </div>
        </div>
        <!--人气-->
        <div class="lesson-hot" v-show="selected === 'lessonHot'">
            <div class="recommend-item" v-for="itemHot in hotLists">
                <a :href="itemHot.url" class="external">
                    <div class="lesson-box clearfloat">
                        <div class="lesson-text">
                            <div class="title-name">{{ itemHot.title }}</div>
                            <div class="lesson-title">{{ itemHot.sub_title }}</div>
                            <div class="lesson-content"></div>
                            <div class="lesson-price">¥{{ itemHot.price }}</div>
                        </div>
                        <img :src="itemHot.post" class="lesson-img"/>
                    </div>
                    <div class="lesson-label">
                        <div class="label-item">{{itemHot.tags}}</div>
                    </div>
                </a>
            </div>
        </div>
        <!--筛选-->
        <div class="lesson-filter" v-if="selected === 'lessonFilter'">
            <div class="recommend-item" v-for="itemFilter in filterLists">
                <a :href="itemFilter.url" class="external">
                    <div class="lesson-box clearfloat">
                        <div class="lesson-text">
                            <div class="title-name">{{ itemFilter.title }}</div>
                            <div class="lesson-title">{{ itemFilter.sub_title }}</div>
                            <div class="lesson-content"></div>
                            <div class="lesson-price">¥{{ itemFilter.price }}</div>
                        </div>
                        <img :src="itemFilter.post" class="lesson-img"/>
                    </div>
                    <div class="lesson-label">
                        <div class="label-item">{{itemFilter.tags}}</div>
                    </div>
                </a>
            </div>
        </div>
        <!-- Preloader -->
        <div class="infinite-scroll-preloader">
            <div class="preloader"></div>
        </div>
    </div>
    <div class="toolbar tabbar tabbar-labels">
        <div class="toolbar-inner">
            <a href="http://wechat.fullstack.cn/index/course/index" class="tab-link active"> <i class="icon tabbar-demo-icon-1"></i><span
                    class="tabbar-label active">课程</span></a>
            <a href="http://wechat.fullstack.cn/index/coach/index" class="tab-link "><i class="icon tabbar-demo-icon-2"></i><span
                    class="tabbar-label">教练</span></a>
            <a href="http://wechat.fullstack.cn/index/stadium/index" class="tab-link "> <i class="icon tabbar-demo-icon-3"></i><span
                    class="tabbar-label">场馆</span></a>
            <a href="http://wechat.fullstack.cn/index/member/index" class="tab-link "> <i class="icon tabbar-demo-icon-4"></i><span
                    class="tabbar-label">我的</span></a>
        </div>
    </div>
    <!--选择栏弹出框-->
    <div class="select-model" v-show="showSelected" @click.stop="onSelectModel">
        <div class="select-content" @click.stop="!onSelectModel">
            <div class="lesson-tabbar select-bar">
                <div class="tabbar-item select-item" @click="onSelect('lessonRecommend')">
                    <img src="__STATIC__/wx/img/btn_recommend_nor@2x.png" alt=""/>
                    <div class="tabbar-text">推荐</div>
                </div>
                <div class="tabbar-item select-item" @click="onSelect('lessonHot')">
                    <img src="__STATIC__/wx/img/btn_Popularity_nor@2x.png" alt=""/>
                    <div class="tabbar-text">人气</div>
                </div>
                <div class="tabbar-item select-item" @click="onSelect('lessonFilter')">
                    <img src="__STATIC__/wx/img/btn_filter_sel@2x.png" alt=""/>
                    <div class="tabbar-text tabbartext-filter ">筛选</div>
                </div>
            </div>

            <div class="select-box ">
                <div class="clearfloat">
                    <p class="title-name">类型</p>
                    <div class="select-label" v-for="(itemCategory,indexCategory ) in category">
                        <div class="label-item category-item" @click="onCategoryLabel(indexCategory,itemCategory.id)">
                            {{itemCategory.title}}
                        </div>
                    </div>
                </div>
                <div class="select-address clearfloat">
                    <p class="title-name title-address">位置</p>
                    <div class="select-label" v-for="(itemArea,indexArea) in area">
                        <div class="label-item area-item" @click="onAreaLabel(indexArea,itemArea.district_code)">
                            {{itemArea.district_name}}
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <!--验证手机号码-->
    <div class="phone-model" v-if="showPhone">
        <div class="phone-content">
            <p class="phone-title">验证新的手机号</p>
            <div class="phone-box">
                <input type="text" class="phone-input" placeholder="请输入手机号" v-model="phoneInput"/>
                <br/>
                <input type="text" class="yzm-input" placeholder="请输入验证码" v-model="yzmInput"/>
                <button class="get-yzm" @click="getYZM">获取验证码</button>
            </div>
            <span class="no-now" @click="hidePhoneModel">暂不</span>
            <button class="insure" @click="confirmBtn" v-bind:class="{ active: checked }" v-bind:disabled="false">确定
            </button>
        </div>
    </div>
    <!--成为会员-->
    <div class="bevip-model" v-if="showBeVip">
        <div class="bevip-content">
            <img src="__STATIC__/wx/img/pop_img_Congratulations@2x.png" alt=""/>
            <p class="vip-code">会员号 {{vipNumber}}</p>
            <p class="vip-tip">恭喜您成为会员啦啦啦</p>
            <p class="vip-btn" @click="vipBtn">确定</p>
        </div>
    </div>
    <!--选择性别-->
    <div class="sex-model" v-if="showSex">
        <div class="sex-content">
            <p class="title-name">性别</p>
            <img src="__STATIC__/wx/img/pop_Gender selection_woman_nor@2x.png" class="gril-img" @click="chooseGirl"/>
            <p class="gril-text">女</p>
            <img src="__STATIC__/wx/img/pop_Gender selection_man@2x.png" class="boy-img" @click="chooseMan"/>
            <p class="boy-text">男</p>
        </div>
    </div>
    <!--完善会员信息-->
    <div class="info-model" v-if="showInfo">
        <div class="info-content">
            <p class="title-name">完善会员信息</p>
            <p class="info-tip">完善更多信息，可能会获得会员信息礼品哦</p>
            <div>
                <span class="no-now" @click="infoCancel">取消</span>
                <button class="insure" @click="infoInsure">确定</button>
            </div>
        </div>
    </div>
</div>
{/block}

{block name="script"}
<script type="text/javascript" src="__STATIC__/wx/js/framework7.js"></script>

<script type="text/javascript">
    var arr1 = [];
    var categoryId;
    new Vue({
        el: '#app',
        data() {
            return {
                selected: 'lessonRecommend',
                showBeVip: false,
                showPhone: false,
                showSex: false,
                showInfo: false,
                showSelected: false,
                isLabel: false,
                recommendimg: true,
                hotimg: false,
                courseLists: [],
                hotLists: [],
                filterLists: [],
                banners: [],
                category: [],
                area: []
            }
        },
        mounted() {
            this.$nextTick(function () {
                this.getCourseList();
                this.getBanner();
                var myApp = new Framework7();
                var $$ = Dom7;
                var myCoach = myApp.swiper('.swiper-coach', {
                    pagination: '.swiper-coach .swiper-pagination',
                    speed: 300,
                    spaceBetween: 100,
                    slidesPerView: 1
                });
//                // Loading flag
//                var loading = false;
//                // Last loaded index
//                var lastIndex = $$('.recommend-item').length;
//                // Max items to load
//                var maxItems = 60;
//                // Append items per load
//                var itemsPerLoad = 20;
//                // Attach 'infinite' event handler
//                $$('.infinite-scroll').on('infinite', function () {
//                    // Exit, if loading in progress
//                    if (loading) return;
//                    // Set loading flag
//                    loading = true;
//                    // Emulate 1s loading
//                    setTimeout(function () {
//                        // Reset loading flag
//                        loading = false;
//                        if (lastIndex >= maxItems) {
//                            // Nothing more to load, detach infinite scroll events to prevent unnecessary loadings
//                            myApp.detachInfiniteScroll($$('.infinite-scroll'));
//                            // Remove preloader
//                            $$('.infinite-scroll-preloader').remove();
//                            return;
//                        }
//                        // Generate new items HTML
//                        var html = '';
////                        for (var i = lastIndex + 1; i <= lastIndex + itemsPerLoad; i++) {
////                            html += '<li class="item-content"><div class="item-inner"><div class="item-title">Item ' + i + '</div></div></li>';
////                        }
//                        axios.post(path + 'course/get_course_list',{
//                            'page':'',
//                            'page_size'
//                        }).then(function (response) {
//
//                            }).catch(function (errot) {
//                                console.log(error);
//                        });
//
//                        // Append new items
//                        $$('.lesson-recommend').append(html);
//
//                        // Update last loaded index
//                        lastIndex = $$('.recommend-item').length;
//                    }, 1000);
//                });
            });

        },
        methods: {
            /*获取个人信息*/
            getInfo:function () {
                const that = this;
                axios.get(path+'member/get_user_info/openid/'+"{$openid}")
                    .then(function (response) {
                        that.infos =response.data;
                        if(that.infos.member_num == null){
                            that.showPhone=true;
                        }
                        console.log('infos',that.infos);
                    })
                    .catch(function (error) {
                        console.log(error);
                    });
            },
            /*获取验证码*/
            getYZM: function () {
                var phoneReg = /(1[3-9]\d{9}$)/;
                const that = this;
                if (!phoneReg.test(that.phoneInput)) {
                    myApp.modal({
                        title:  '云之力',
                        text:'手机号码格式错误,请重试！',
                        buttons:[
                            {
                                text:'确定'
                            }
                        ]
                    });
                } else {
                    axios.post(path + 'member/sendSMSCode?mobile=' + that.phoneInput)
                        .then(function (response) {
                            if (response.status == 200) {
                                var wait = 30;
                                var yzm = $('.get-yzm');
                                time();

                                function time() {
                                    if (wait < 0) {
                                        yzm.text("获取验证码");
                                        yzm.removeAttr("disabled");
                                        wait = 60;
                                    } else {
                                        yzm.attr("disabled", "true");
                                        yzm.text(wait + "秒后重新获取");
                                        wait--;
                                        setTimeout(function () {
                                            time();
                                        }, 1000)
                                    }
                                }

                            } else {
                                myApp.modal({
                                    title:  '云之力',
                                    text:response.data.errmsg,
                                    buttons:[
                                        {
                                            text:'确定'
                                        }
                                    ]
                                });
                            }
                            console.log(response.data);
                        })
                        .catch(function (error) {
                            console.log(error);
                        });
                }

            },
            /*验证新号码*/
            confirmBtn: function () {
                const that = this;
                axios.post(path + 'member/register', {
                    'openid': "{$openid}",
                    'mobile': that.phoneInput,
                    'sms_code': that.yzmInput
                }).then(function (response) {
                    console.log(response.status);
                    if (response.data.status == true) {
                        that.vipNumber = response.data.member_num;
                        that.showPhone = false;
                        that.showBeVip = true;
                        console.log("vipNumber", that.vipNumber)

                    } else {
                        myApp.modal({
                            title:  '云之力',
                            text:response.data.msg,
                            buttons:[
                                {
                                    text:'确定'
                                }
                            ]
                        });
                    }
                    console.log(response.data);
                })
                    .catch(function (error) {
                        console.log(error);
                    });
            },
            hidePhoneModel: function () {
                this.showPhone = false;
                this.showEditorName=false;
            },
            vipBtn: function () {
                this.showBeVip = false;
                this.showSex = true;
            },
            chooseGirl: function () {
                $('.input-sex').attr("value", "女");
                this.showSex = false;
                this.showInfo = true;
            },
            chooseMan: function () {
                $('.input-sex').attr("value", "男");
                this.showSex = false;
                this.showInfo = true;
            },
            infoCancel: function () {
                this.showInfo = false;
            },
            infoInsure: function () {
                this.showInfo = false;
                location.href="";
            },
            /*获取推荐课程*/
            getCourseList: function () {
                const that = this;
                axios.post(path + 'course/get_course_list')
                    .then(function (response) {
                        that.courseLists = response.data.data;
                        that.courseLists.forEach(function (item) {
                            item.url = "{:url('index/index/details')}" + "?id=" + item.id;
                        });
                        console.log('courseList', that.courseLists);
                    })
                    .catch(function (error) {
                        console.log(error);
                    });

            },
            /*人气*/
            getHotList: function () {
                const that = this;
                axios.post(path + 'course/get_course_list', {
                    'type': 'renqi'
                }).then(function (response) {
                    that.hotLists = response.data.data;
//                    that.hotLists.forEach(function (item) {
//                        item.url = "{:url('index/index/details')}" + "?id=" + item.id;
//                    });
                    console.log('hostList', that.hotLists);
                });
            },
            /*筛选类型*/
            getFilterList: function (categoryId, areaArray) {
                const that = this;
                console.log('category', categoryId);
                console.log('area', areaArray);
                axios.post(path + 'course/get_course_list', {
                    'type': 'screen',
                    'where': {
                        'type': categoryId,
                        'area': areaArray
                    }
                }).then(function (response) {
                    if (response.data.status == false) {
                        console.log('筛选无结果')
                    } else {
                        that.filterLists = response.data;
                    }
//                    if(that.filterLists!=null){
//                        that.filterLists.forEach(function (item) {
//                            item.url = "{:url('index/index/details')}" + "?id=" + item.id;
//                        });
//                    }

                    console.log('filter response.data', response.data);
                });
            },

            /*选择切换*/
            onSelect(selected) {
                this.selected = selected;
                if (selected === 'lessonRecommend') {
                    this.getCourseList();
                    $(' .active .item-recommend-img').attr("src", "__STATIC__/wx/img/btn_recommend_sel@2x.png");
                    $(' .item-hot-img').attr("src", "__STATIC__/wx/img/btn_Popularity_nor@2x.png");
                    $('.item-filter-img').attr("src", "__STATIC__/wx/img/btn_filter_nor@2x.png");
                    $('.tabbar-text').removeClass('tabbartext-select');
                    $('.tabbartext-recommend').addClass('tabbartext-select');
                    this.showSelected = false;
                }
                if (selected === 'lessonHot') {
                    this.getHotList();
                    $(' .active .item-hot-img').attr("src", "__STATIC__/wx/img/btn_Popularity_sel@2x.png");
                    $('.item-recommend-img').attr("src", "__STATIC__/wx/img/btn_recommend_nor@2x.png");
                    $('.item-filter-img').attr("src", "__STATIC__/wx/img/btn_filter_nor@2x.png");
                    $('.tabbar-text').removeClass('tabbartext-select');
                    $('.tabbartext-hot').addClass('tabbartext-select');
                    this.showSelected = false;
                }
                if (selected === 'lessonFilter') {
                    this.onSelectModel();
                    $(' .active .item-filter-img').attr("src", "__STATIC__/wx/img/btn_filter_sel@2x.png");
                    $('.item-recommend-img').attr("src", "__STATIC__/wx/img/btn_recommend_nor@2x.png");
                    $(' .item-hot-img').attr("src", "__STATIC__/wx/img/btn_Popularity_nor@2x.png");
                    $('.tabbar-text').removeClass('tabbartext-select');
                    $('.tabbartext-filter').addClass('tabbartext-select');
                }
            },
            /*轮播*/
            getBanner: function () {
                const that = this;
                axios.post(path + 'index/get_banner_list/type/3')
                    .then(function (response) {
                        that.banners = response.data.data;
                        console.log('banner', that.banners);
                    })
                    .catch(function (error) {
                        console.log(error);
                    });
            },
            /*筛选弹出框*/
            onSelectModel: function () {
                const that = this;
                that.showSelected = !that.showSelected;
                axios.post(path + '/index/get_course_type')
                    .then(function (response) {
                        that.category = response.data.data;
                        console.log('category',response.data);
                    });
                axios.post(path + 'index/get_area_type')
                    .then(function (response) {
                        that.area = response.data.data;
                        console.log("area", that.area);
                    });
                if (!that.showSelected) {
                    this.getFilterList(categoryId, areaArray);
                }
            },
            /*筛选类型*/
            onCategoryLabel: function (i, id) {
                $('.category-item').removeClass('active');
                $('.category-item').eq(i).toggleClass('active');
                categoryId = id;
                console.log('categoryId', categoryId);
            },
            /*筛选区域*/
            onAreaLabel: function (i, id) {
                $('.area-item').eq(i).toggleClass('active');
                var itemId;
                /*数组去重*/
                for (var x = 0; x < arr1.length; x++) {
                    if(arr1[x] == id){
                        itemId = x;
                    }
                }

                if (arr1.indexOf(id) !== -1) {
                    arr1.splice(itemId,1);
                }else{
                    arr1.push(id);
                }

                console.log('itemId', itemId);
                console.log('arr1', arr1);
            }
        },


    })
</script>
{/block}